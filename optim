





exp.test<-function(x1,a1,alpha1,a2,mu2,alpha2,lambda2,a3,mu3,alpha3,lambda3,c1){
  x <- x1
  exp1 <- (a1 * exp(-alpha1 * x)) + (a2 * exp(-alpha2 * (x-mu2) - exp(-lambda2 * (x - mu2)))) + (a3 * exp(-alpha3 * (x-mu3) - exp(-lambda3 * (x - mu3)))) + c1
  return(exp1)
}


resultAcum <- NA

#y(x) función discreta
# valores de las proporciones de migración por edad entre 0 y 80
# 
# plot(1:90, seq(0,0.1, length =90 ))
# 
# dataIn <- locator(20)
# plot()
# set.seed(777)

dataIn <- read.table("https://raw.githubusercontent.com/elflacosebas/thesis/master/mexico.txt",header = T)
#dataIn$std.prop <- dataIn$proportion/sum(dataIn$proportion)
y <- approxfun(c(dataIn$edad), c(dataIn$proportion))
plot(dataIn$std.prop)

x <- dataIn$edad

resultAcum <- NA
for (j in 1:100000){

  #primera exponencial
  a1 <- runif(1, 0.028, 0.03)
  alpha1 <- runif(1, 0.08, 0.1)
  
  #segunda exponencial
  a2 <- runif(1, 0.046, 0.048)
  alpha2 <- runif(1, 0.6, 0.8)
  mu2 <- runif(1, 15, 25)
  lambda2 <- runif(1, 0.2, 0.4)
  
  #tercera exponencial
  a3 <- runif(1, 0.03)
  alpha3 <- runif(1, 0.5, 0.9)
  mu3 <- runif(1, 80, 90)
  lambda3 <- runif(1, 0.1, 0.2)
  
  a3 <- 0
  alpha3 <- 0
  mu3 <- 0
  lambda3 <- 0
  
  #constante
  c1 <- runif(1,0.001,0.003)
  
  
  parameters <- c(a1,alpha1,a2,mu2,alpha2,lambda2,a3,mu3,alpha3,lambda3,c1)
  
  #FUNCI?N DE 11 PAR?METROS DE ROGERS Y CASTRO
  
  
  function2optim <- function(parameters1){
    sum((1/y(x))*(exp.test(x,a1,alpha1,a2,mu2,alpha2,lambda2,a3,mu3,alpha3,lambda3,c1) - y(x)) ^2)
  }
  
  #resultOptim <- optim(parameters, function2optim)
  
  resultOptim <- optim(parameters, function2optim, method='L-BFGS-B', lower = c(0.28, 0.08, 0.046, 0.6, 15, 0.2, 0.00001, 0.00001, 0.00001, 0.00001, 0.001), upper = c(0.03, 0.1, 0.048, 0.8, 25, 0.4, 0.000011, 0.000011, 0.000011, 0.000011, 0.003))
  
  resultAcum <- rbind(resultAcum, c(resultOptim$value, parameters,resultOptim$par))
  
}


estocolmo<-c(0.033,0.097,0.059,20.80,0.77,0.374,0.000,76.55,0.776,0.145,0.003)
x <- 1:89
#x11()
plot(0:90,y(0:90), type = 'l',col='red', lwd=3)
#for(i in 2:nrow(resultAcum)){
  #lines(exp.test(0:90, resultAcum[i,13],resultAcum[i,14],resultAcum[i,15],resultAcum[i,16]
   #              ,resultAcum[i,17],resultAcum[i,18],resultAcum[i,19],resultAcum[i,20],resultAcum[i,21],resultAcum[i,22],resultAcum[i,23]))
  
  lines(exp.test(0:90, estocolmo[1],estocolmo[2],estocolmo[3],estocolmo[4],estocolmo[5],estocolmo[6],estocolmo[7],estocolmo[8]
                 ,estocolmo[9],estocolmo[10],estocolmo[11]), col='blue')
  
  best <- resultAcum[which.min(resultAcum[,1]),]
  lines(exp.test(0:90, best[2], best[3], best[4], best[5], best[6],
                 best[7], best[8], best[9], best[10], best[11], best[12]), col='black')
  
  
#}

best
mean(resultAcum[,5], na.rm = T)
sd(resultAcum[,5], na.rm = T)


