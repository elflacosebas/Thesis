


library(data.table)
library(dplyr)
#library(ClustOfVar)
library(xtable)
library("reshape2")
library("ggplot2")


library(data.table)
library(dplyr)
#library(ClustOfVar)
library(xtable)
library("reshape2")
library("ggplot2")


setwd(' set the directory ')

tabla <- fread('tabla.txt',header=T, sep='\t', data.table=F)

ranking<-function(table){
  countries <- rep(1:20)
  aux <- rep(1:20)
  
  for(i in 3:234){
    
    ord.table <- (table[order(tabla90[,i],decreasing = T),])
    
    rank <- as.vector(ord.table$area[1:20])
    countries <- cbind(countries,rank)
    
    tasa <- as.vector(ord.table[1:20,i])
    aux <- cbind(aux,tasa)
    
  }
  
  R <- data.frame(countries)[,-1]
  colnames(R)[1:length(colnames(R))] <- colnames(table)[3:length(colnames(table))]
  
  R1 <- data.frame(aux)[,-1]
  colnames(R1)[1:length(colnames(R1))] <- colnames(table)[3:length(colnames(table))]
  
  R.list <- list(R,R1)
  R.list
}

ranking90.lab <- ranking(tabla90)[[1]]
ranking00.lab <- ranking(tabla00)[[1]]
ranking10.lab <- ranking(tabla10)[[1]]
ranking13.lab <- ranking(tabla13)[[1]]
ranking90.val <- ranking(tabla90)[[2]]
ranking00.val <- ranking(tabla00)[[2]]
ranking10.val <- ranking(tabla10)[[2]]
ranking13.val <- ranking(tabla13)[[2]]

rank.list.lab <- list(ranking90.lab, ranking00.lab, ranking10.lab, ranking13.lab)
rank.list.val <- list(ranking90.val, ranking00.val, ranking10.val, ranking13.val)

#### FUNCIÓN PARA ORGANIZAR LOS ELEMENTOS DE LAS LISTAS EN EL TIEMPO 

yr <- c('País','1990','2000','2010','2013')

eneltiempo <- function(rank.list){

yr <- c('1990','2000','2010','2013')
long <-  vector("list", 232)

for(j in 1 : dim(rank.list[[1]])[2]){
  
  v<-rep(1:20)
  for(i in  1: length(rank.list)){
    
    r <- as.vector(rank.list[[i]][,j])
    v <- cbind(v,r)
  }
    v <- (v[,-1])
  colnames(v) <- yr
  long[[j]] <- v
  }
names(long) <- colnames(rank.list[[1]])
long
}

longit.lab <- eneltiempo(rank.list.lab)
longit.val <- eneltiempo(rank.list.val)


#####    FUNCIÓN QUE GRAFICA LOS PAÍSES

country.sort <- function(A,B,country,ymax){
tab <- rep(1:5)
for(i in 1 : dim(A)[1]){  
  C <- A[match(A[i,1],A[,1]),1]
  C <- as.vector(cbind(C,B[match(A[i,1],A[,1]),1],
                         B[match(A[i,1],A[,1]),2],
                         B[match(A[i,1],A[,1]),3],
                         B[match(A[i,1],A[,1]),4]))
    tab <- rbind(tab,C)
}

yr <- c('1990','2000','2010','2013')
yr1 <- c('País','1990','2000','2010','2013')
tab <- tab[-1,]
colnames(tab) <- yr1
write.table(tab, 'tabla_de_ranking.csv', sep=',')

x11()
plot_colors<-c('black', 'darkmagenta', 'red', 'blue', 
               'orange', 'darkslateblue', 'grey', 'darkred', 'gold3', 'cadetblue')
plot(tab[1,2:5]~yr, type = 'o', xlim = c(1990,2015), ylim = c(0, ymax), ylab = 'Tasa por 100000',
     pch = 1, lty = 1, xlab = 'Año', main = paste('Tendencia de la propensión emigratoria \n desde',country))

#for(i in 2:10){
 # lines(tab[i,2:5]~yr, type='o', pch = i, lty=i)
#}

lines(tab[2,2:5]~yr, type="o", pch=2, lty=2, col=plot_colors[2])
lines(tab[3,2:5]~yr, type="o", pch=3, lty=3, col=plot_colors[3])
lines(tab[4,2:5]~yr, type='o', pch=4, lty=4, col=plot_colors[4])
lines(tab[5,2:5]~yr, type='o', pch=5, lty=5, col=plot_colors[5])
lines(tab[6,2:5]~yr, type='o', pch=6, lty=6, col=plot_colors[6])
lines(tab[7,2:5]~yr, type='o', pch=7, lty=1, col=plot_colors[7])
lines(tab[8,2:5]~yr, type='o', pch=8, lty=2, col=plot_colors[8])
lines(tab[9,2:5]~yr, type='o', pch=9, lty=3, col=plot_colors[9])
lines(tab[10,2:5]~yr, type='o', pch=10, lty=4, col=plot_colors[10])
legend("topleft", tab[1:10,1], cex=1, pch = 1:10, lty= 1:6, col=plot_colors[1:10], lwd=1, bty="n")


###COEFICIENTE DE RANGOS DE SPEARMAN
## tablas de correlaciones

###  Función tomada de http://myowelt.blogspot.com.es/2008/04/beautiful-correlation-tables-in-r.html

corstarsl <- function(x){ 
  require(Hmisc) 
  x <- as.matrix(x) 
  R <- rcorr(x, type = 'spearman')$r 
  p <- rcorr(x, type = 'spearman')$P 
  
  ## define notions for significance levels; spacing is important.
  mystars <- ifelse(p < .001, "***", ifelse(p < .01, "** ", ifelse(p < .05, "* ", " ")))
  
  ## trunctuate the matrix that holds the correlations to two decimal
  R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1] 
  
  ## build a new matrix that includes the correlations with their apropriate stars 
  Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x)) 
  diag(Rnew) <- paste(diag(R), " ", sep="") 
  rownames(Rnew) <- colnames(x) 
  colnames(Rnew) <- paste(colnames(x), "", sep="") 
  
  ## remove upper triangle
  Rnew <- as.matrix(Rnew)
  Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
  Rnew <- as.data.frame(Rnew) 
  
  ## remove last column and return the matrix (which is now a data frame)
  Rnew <- cbind(Rnew[1:length(Rnew)-1])
  return(Rnew) 
}

cat('\n MATRIZ DE CORRELACIONES DE SPEARMAN ENTRE LOS AÑOS \n')

print(xtable(corstarsl(tab[,2:5])))


return(tab)

}

setwd('D:/UnivAutBarcelona/Migration Data UN/Rankings')

country <- desired country

A <- longit.lab$country
B <- longit.val$country
country <- 'Canadá'
country.sort(A,B,country,700)


